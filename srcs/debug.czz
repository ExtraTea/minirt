int amain(void)
{
	t_mlx_data	mlx_data;

	mlx_data.mlx = mlx_init();
	mlx_data.mlx_win = mlx_new_window(mlx_data.mlx, WIDTH, HEIGHT, "micro-rt");
	mlx_data.img.img = mlx_new_image(mlx_data.mlx, (int)WIDTH, (int)HEIGHT);
	mlx_data.img.addr = mlx_get_data_addr(mlx_data.img.img, &mlx_data.img.bits_per_pixel,
			&mlx_data.img.line_length, &mlx_data.img.endian);

	t_environment *env;
	env = (t_environment *)malloc(sizeof(t_environment));
	env->ambient = (t_ambient *)malloc(sizeof(t_ambient));
	env->ambient->ratio = 0.6f;
	env->ambient->color.r = 255;
	env->ambient->color.g = 255;
	env->ambient->color.b = 255;

	env->cam = (t_camera *)malloc(sizeof(t_camera));
	env->cam->fov = 120;
	env->cam->ori.x = 0;
	env->cam->ori.y = 0.0f;
	env->cam->ori.z = 10.0f;
	env->cam->pos.x = -3.0f;
	env->cam->pos.y = 4.0f;
	env->cam->pos.z = -8.0f; 

	env->light = (t_light *)malloc(sizeof(t_light));
	env->light->color.r = 255;
	env->light->color.g = 255;
	env->light->color.b = 255;
	env->light->pos.x = -3.0f;
	env->light->pos.y = 10.2001f;
	env->light->pos.z = 0.0f;
	env->light->ratio = 1.0;

	t_plane plane;
	plane.color.r = 0;
	plane.color.g = 128;
	plane.color.b = 0;
	plane.point.x = 0;
	plane.point.y = 0;
	plane.point.z = 0;
	plane.norm.x = 0;
	plane.norm.y = 1.0f;
	plane.norm.z = 0;

	t_sphere sphere;
	sphere.center.x = -3.0f;
	sphere.center.y = 4.0f;
	sphere.center.z = 0.0f;
	sphere.color.r = 255;
	sphere.color.g = 255;
	sphere.color.b = 255;
	sphere.r = 1.5f;

	t_sphere sphere2;
	sphere2.center.x = -3.0f;
	sphere2.center.y = 2.0f;
	sphere2.center.z = 0.0f;
	sphere2.color.r = 255;
	sphere2.color.g = 255;
	sphere2.color.b = 255;
	sphere2.r = 1.5f;

	env->obj = (t_obj *)malloc(sizeof (t_obj));
	env->obj->obj = &plane;
	env->obj->type = 'p';
	env->obj->next = (t_obj *)malloc(sizeof (t_obj));
	env->obj->next->obj = &sphere;
	env->obj->next->type = 's';
	env->obj->next->next = (t_obj *)malloc(sizeof (t_obj));
	env->obj->next->next->obj = &sphere2;
	env->obj->next->next->type = 's';
	env->obj->next->next->next = NULL;
	
	loop_something(&mlx_data, env);
	mlx_loop(mlx_data.mlx);
	return (0);
}